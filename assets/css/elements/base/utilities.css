// Comprehensive Utility Classes for Stay Dripped Mobile IV

// Spacing utilities - generate automatically
@include generate-spacing-utilities;

// Display utilities
.block {
  display: block !important;
}
.inline-block {
  display: inline-block !important;
}
.inline {
  display: inline !important;
}
.flex {
  display: flex !important;
}
.inline-flex {
  display: inline-flex !important;
}
.table {
  display: table !important;
}
.inline-table {
  display: inline-table !important;
}
.table-caption {
  display: table-caption !important;
}
.table-cell {
  display: table-cell !important;
}
.table-column {
  display: table-column !important;
}
.table-column-group {
  display: table-column-group !important;
}
.table-footer-group {
  display: table-footer-group !important;
}
.table-header-group {
  display: table-header-group !important;
}
.table-row-group {
  display: table-row-group !important;
}
.table-row {
  display: table-row !important;
}
.flow-root {
  display: flow-root !important;
}
.grid {
  display: grid !important;
}
.inline-grid {
  display: inline-grid !important;
}
.contents {
  display: contents !important;
}
.list-item {
  display: list-item !important;
}
.hidden {
  display: none !important;
}

// Flexbox utilities
.flex-1 {
  flex: 1 1 0% !important;
}
.flex-auto {
  flex: 1 1 auto !important;
}
.flex-initial {
  flex: 0 1 auto !important;
}
.flex-none {
  flex: none !important;
}

.flex-row {
  flex-direction: row !important;
}
.flex-row-reverse {
  flex-direction: row-reverse !important;
}
.flex-col {
  flex-direction: column !important;
}
.flex-col-reverse {
  flex-direction: column-reverse !important;
}

.flex-wrap {
  flex-wrap: wrap !important;
}
.flex-wrap-reverse {
  flex-wrap: wrap-reverse !important;
}
.flex-nowrap {
  flex-wrap: nowrap !important;
}

.items-start {
  align-items: flex-start !important;
}
.items-end {
  align-items: flex-end !important;
}
.items-center {
  align-items: center !important;
}
.items-baseline {
  align-items: baseline !important;
}
.items-stretch {
  align-items: stretch !important;
}

.self-auto {
  align-self: auto !important;
}
.self-start {
  align-self: flex-start !important;
}
.self-end {
  align-self: flex-end !important;
}
.self-center {
  align-self: center !important;
}
.self-stretch {
  align-self: stretch !important;
}
.self-baseline {
  align-self: baseline !important;
}

.justify-start {
  justify-content: flex-start !important;
}
.justify-end {
  justify-content: flex-end !important;
}
.justify-center {
  justify-content: center !important;
}
.justify-between {
  justify-content: space-between !important;
}
.justify-around {
  justify-content: space-around !important;
}
.justify-evenly {
  justify-content: space-evenly !important;
}

.justify-items-start {
  justify-items: start !important;
}
.justify-items-end {
  justify-items: end !important;
}
.justify-items-center {
  justify-items: center !important;
}
.justify-items-stretch {
  justify-items: stretch !important;
}

.justify-self-auto {
  justify-self: auto !important;
}
.justify-self-start {
  justify-self: start !important;
}
.justify-self-end {
  justify-self: end !important;
}
.justify-self-center {
  justify-self: center !important;
}
.justify-self-stretch {
  justify-self: stretch !important;
}

.content-center {
  align-content: center !important;
}
.content-start {
  align-content: flex-start !important;
}
.content-end {
  align-content: flex-end !important;
}
.content-between {
  align-content: space-between !important;
}
.content-around {
  align-content: space-around !important;
}
.content-evenly {
  align-content: space-evenly !important;
}

// Grid utilities
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr)) !important;
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
}
.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr)) !important;
}
.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr)) !important;
}
.grid-cols-5 {
  grid-template-columns: repeat(5, minmax(0, 1fr)) !important;
}
.grid-cols-6 {
  grid-template-columns: repeat(6, minmax(0, 1fr)) !important;
}
.grid-cols-7 {
  grid-template-columns: repeat(7, minmax(0, 1fr)) !important;
}
.grid-cols-8 {
  grid-template-columns: repeat(8, minmax(0, 1fr)) !important;
}
.grid-cols-9 {
  grid-template-columns: repeat(9, minmax(0, 1fr)) !important;
}
.grid-cols-10 {
  grid-template-columns: repeat(10, minmax(0, 1fr)) !important;
}
.grid-cols-11 {
  grid-template-columns: repeat(11, minmax(0, 1fr)) !important;
}
.grid-cols-12 {
  grid-template-columns: repeat(12, minmax(0, 1fr)) !important;
}

.grid-rows-1 {
  grid-template-rows: repeat(1, minmax(0, 1fr)) !important;
}
.grid-rows-2 {
  grid-template-rows: repeat(2, minmax(0, 1fr)) !important;
}
.grid-rows-3 {
  grid-template-rows: repeat(3, minmax(0, 1fr)) !important;
}
.grid-rows-4 {
  grid-template-rows: repeat(4, minmax(0, 1fr)) !important;
}
.grid-rows-5 {
  grid-template-rows: repeat(5, minmax(0, 1fr)) !important;
}
.grid-rows-6 {
  grid-template-rows: repeat(6, minmax(0, 1fr)) !important;
}

.col-auto {
  grid-column: auto !important;
}
.col-span-1 {
  grid-column: span 1 / span 1 !important;
}
.col-span-2 {
  grid-column: span 2 / span 2 !important;
}
.col-span-3 {
  grid-column: span 3 / span 3 !important;
}
.col-span-4 {
  grid-column: span 4 / span 4 !important;
}
.col-span-5 {
  grid-column: span 5 / span 5 !important;
}
.col-span-6 {
  grid-column: span 6 / span 6 !important;
}
.col-span-full {
  grid-column: 1 / -1 !important;
}

.row-auto {
  grid-row: auto !important;
}
.row-span-1 {
  grid-row: span 1 / span 1 !important;
}
.row-span-2 {
  grid-row: span 2 / span 2 !important;
}
.row-span-3 {
  grid-row: span 3 / span 3 !important;
}
.row-span-4 {
  grid-row: span 4 / span 4 !important;
}
.row-span-5 {
  grid-row: span 5 / span 5 !important;
}
.row-span-6 {
  grid-row: span 6 / span 6 !important;
}
.row-span-full {
  grid-row: 1 / -1 !important;
}

// Gap utilities
.gap-0 {
  gap: 0 !important;
}
.gap-1 {
  gap: map-get($spacing, 1) !important;
}
.gap-2 {
  gap: map-get($spacing, 2) !important;
}
.gap-3 {
  gap: map-get($spacing, 3) !important;
}
.gap-4 {
  gap: map-get($spacing, 4) !important;
}
.gap-5 {
  gap: map-get($spacing, 5) !important;
}
.gap-6 {
  gap: map-get($spacing, 6) !important;
}
.gap-8 {
  gap: map-get($spacing, 8) !important;
}
.gap-10 {
  gap: map-get($spacing, 10) !important;
}
.gap-12 {
  gap: map-get($spacing, 12) !important;
}
.gap-16 {
  gap: map-get($spacing, 16) !important;
}
.gap-20 {
  gap: map-get($spacing, 20) !important;
}
.gap-24 {
  gap: map-get($spacing, 24) !important;
}

// Position utilities
.static {
  position: static !important;
}
.fixed {
  position: fixed !important;
}
.absolute {
  position: absolute !important;
}
.relative {
  position: relative !important;
}
.sticky {
  position: sticky !important;
}

// Positioning values
.inset-0 {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.inset-auto {
  top: auto;
  right: auto;
  bottom: auto;
  left: auto;
}
.top-0 {
  top: 0 !important;
}
.right-0 {
  right: 0 !important;
}
.bottom-0 {
  bottom: 0 !important;
}
.left-0 {
  left: 0 !important;
}
.top-auto {
  top: auto !important;
}
.right-auto {
  right: auto !important;
}
.bottom-auto {
  bottom: auto !important;
}
.left-auto {
  left: auto !important;
}

// Width and height utilities
.w-auto {
  width: auto !important;
}
.w-full {
  width: 100% !important;
}
.w-screen {
  width: 100vw !important;
}
.w-fit {
  width: fit-content !important;
}
.w-min {
  width: min-content !important;
}
.w-max {
  width: max-content !important;
}

.h-auto {
  height: auto !important;
}
.h-full {
  height: 100% !important;
}
.h-screen {
  height: 100vh !important;
}
.h-fit {
  height: fit-content !important;
}
.h-min {
  height: min-content !important;
}
.h-max {
  height: max-content !important;
}

// Min/Max width and height
.min-w-0 {
  min-width: 0 !important;
}
.min-w-full {
  min-width: 100% !important;
}
.min-w-min {
  min-width: min-content !important;
}
.min-w-max {
  min-width: max-content !important;
}
.min-w-fit {
  min-width: fit-content !important;
}

.min-h-0 {
  min-height: 0 !important;
}
.min-h-full {
  min-height: 100% !important;
}
.min-h-screen {
  min-height: 100vh !important;
}
.min-h-min {
  min-height: min-content !important;
}
.min-h-max {
  min-height: max-content !important;
}
.min-h-fit {
  min-height: fit-content !important;
}

.max-w-none {
  max-width: none !important;
}
.max-w-xs {
  max-width: 20rem !important;
}
.max-w-sm {
  max-width: 24rem !important;
}
.max-w-md {
  max-width: 28rem !important;
}
.max-w-lg {
  max-width: 32rem !important;
}
.max-w-xl {
  max-width: 36rem !important;
}
.max-w-2xl {
  max-width: 42rem !important;
}
.max-w-3xl {
  max-width: 48rem !important;
}
.max-w-4xl {
  max-width: 56rem !important;
}
.max-w-5xl {
  max-width: 64rem !important;
}
.max-w-6xl {
  max-width: 72rem !important;
}
.max-w-7xl {
  max-width: 80rem !important;
}
.max-w-full {
  max-width: 100% !important;
}
.max-w-min {
  max-width: min-content !important;
}
.max-w-max {
  max-width: max-content !important;
}
.max-w-fit {
  max-width: fit-content !important;
}

.max-h-full {
  max-height: 100% !important;
}
.max-h-screen {
  max-height: 100vh !important;
}
.max-h-min {
  max-height: min-content !important;
}
.max-h-max {
  max-height: max-content !important;
}
.max-h-fit {
  max-height: fit-content !important;
}

// Background utilities
.bg-transparent {
  background-color: transparent !important;
}
.bg-current {
  background-color: currentColor !important;
}
.bg-primary {
  background-color: $color-primary !important;
}
.bg-secondary {
  background-color: $color-secondary !important;
}
.bg-accent {
  background-color: $color-accent !important;
}
.bg-success {
  background-color: $color-success !important;
}
.bg-warning {
  background-color: $color-warning !important;
}
.bg-error {
  background-color: $color-error !important;
}
.bg-info {
  background-color: $color-info !important;
}

// Border utilities
.border {
  border: 1px solid rgba($color-primary, 0.2) !important;
}
.border-0 {
  border: 0 !important;
}
.border-2 {
  border: 2px solid rgba($color-primary, 0.2) !important;
}
.border-4 {
  border: 4px solid rgba($color-primary, 0.2) !important;
}
.border-8 {
  border: 8px solid rgba($color-primary, 0.2) !important;
}

.border-t {
  border-top: 1px solid rgba($color-primary, 0.2) !important;
}
.border-r {
  border-right: 1px solid rgba($color-primary, 0.2) !important;
}
.border-b {
  border-bottom: 1px solid rgba($color-primary, 0.2) !important;
}
.border-l {
  border-left: 1px solid rgba($color-primary, 0.2) !important;
}

.border-primary {
  border-color: $color-primary !important;
}
.border-secondary {
  border-color: $color-secondary !important;
}
.border-accent {
  border-color: $color-accent !important;
}
.border-success {
  border-color: $color-success !important;
}
.border-warning {
  border-color: $color-warning !important;
}
.border-error {
  border-color: $color-error !important;
}
.border-info {
  border-color: $color-info !important;
}

// Border radius utilities
@each $name, $value in $border-radius {
  .rounded-#{$name} {
    border-radius: $value !important;
  }
}

.rounded-t-none {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.rounded-r-none {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.rounded-b-none {
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}
.rounded-l-none {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

// Shadow utilities
@each $name, $value in $shadow {
  .shadow-#{$name} {
    box-shadow: $value !important;
  }
}

// Opacity utilities
.opacity-0 {
  opacity: 0 !important;
}
.opacity-5 {
  opacity: 0.05 !important;
}
.opacity-10 {
  opacity: 0.1 !important;
}
.opacity-20 {
  opacity: 0.2 !important;
}
.opacity-25 {
  opacity: 0.25 !important;
}
.opacity-30 {
  opacity: 0.3 !important;
}
.opacity-40 {
  opacity: 0.4 !important;
}
.opacity-50 {
  opacity: 0.5 !important;
}
.opacity-60 {
  opacity: 0.6 !important;
}
.opacity-70 {
  opacity: 0.7 !important;
}
.opacity-75 {
  opacity: 0.75 !important;
}
.opacity-80 {
  opacity: 0.8 !important;
}
.opacity-90 {
  opacity: 0.9 !important;
}
.opacity-95 {
  opacity: 0.95 !important;
}
.opacity-100 {
  opacity: 1 !important;
}

// Z-index utilities
@each $name, $value in $z-index {
  .z-#{$name} {
    z-index: $value !important;
  }
}

// Overflow utilities
.overflow-auto {
  overflow: auto !important;
}
.overflow-hidden {
  overflow: hidden !important;
}
.overflow-visible {
  overflow: visible !important;
}
.overflow-scroll {
  overflow: scroll !important;
}
.overflow-x-auto {
  overflow-x: auto !important;
}
.overflow-x-hidden {
  overflow-x: hidden !important;
}
.overflow-x-visible {
  overflow-x: visible !important;
}
.overflow-x-scroll {
  overflow-x: scroll !important;
}
.overflow-y-auto {
  overflow-y: auto !important;
}
.overflow-y-hidden {
  overflow-y: hidden !important;
}
.overflow-y-visible {
  overflow-y: visible !important;
}
.overflow-y-scroll {
  overflow-y: scroll !important;
}

// Object fit utilities
.object-contain {
  object-fit: contain !important;
}
.object-cover {
  object-fit: cover !important;
}
.object-fill {
  object-fit: fill !important;
}
.object-none {
  object-fit: none !important;
}
.object-scale-down {
  object-fit: scale-down !important;
}

// Object position utilities
.object-bottom {
  object-position: bottom !important;
}
.object-center {
  object-position: center !important;
}
.object-left {
  object-position: left !important;
}
.object-left-bottom {
  object-position: left bottom !important;
}
.object-left-top {
  object-position: left top !important;
}
.object-right {
  object-position: right !important;
}
.object-right-bottom {
  object-position: right bottom !important;
}
.object-right-top {
  object-position: right top !important;
}
.object-top {
  object-position: top !important;
}

// Image utilities
.img-responsive {
  display: block;
  max-width: 100%;
  height: auto;
}

// Container
.container {
  @include container;
}

// Screen reader only
.sr-only {
  @include sr-only;
}

// Lazy loading
.lazy {
  opacity: 0;
  @include transition(opacity);

  &.loaded {
    opacity: 1;
  }
}

// Responsive utilities
@include respond-to(sm) {
  .sm\:block {
    display: block !important;
  }
  .sm\:hidden {
    display: none !important;
  }
  .sm\:flex {
    display: flex !important;
  }
  .sm\:grid {
    display: grid !important;
  }
  .sm\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
  }
  .sm\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr)) !important;
  }
}

@include respond-to(md) {
  .md\:block {
    display: block !important;
  }
  .md\:hidden {
    display: none !important;
  }
  .md\:flex {
    display: flex !important;
  }
  .md\:grid {
    display: grid !important;
  }
  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
  }
  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr)) !important;
  }
  .md\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr)) !important;
  }
}

@include respond-to(lg) {
  .lg\:block {
    display: block !important;
  }
  .lg\:hidden {
    display: none !important;
  }
  .lg\:flex {
    display: flex !important;
  }
  .lg\:grid {
    display: grid !important;
  }
  .lg\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
  }
  .lg\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr)) !important;
  }
  .lg\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr)) !important;
  }
  .lg\:grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr)) !important;
  }
  .lg\:grid-cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr)) !important;
  }
}
